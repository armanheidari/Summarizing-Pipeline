import os
import sys

from path_handler import PathManager

path_manager = PathManager()
sys.path.append(str(path_manager.get_base_directory()))

from src.config.config import SummerizerConfig


class Summarizer:
    """
    A class for summarizing text using a configured LLM client and prompt.

    This class takes a configuration object (`SummerizerConfig`) and uses it to interact with
    an LLM client to generate summaries based on the provided text.

    Attributes:
        prompt (str): The summarization prompt to use.
        client: The LLM client for generating summaries.
        model (str): The specific model to use for summarization.

    Methods:
        run: Summarizes the input text using the configured LLM client and prompt.
    """
    
    def __init__(self, config: SummerizerConfig):
        """
        Initializes the Summarizer with the provided configuration.

        Args:
            config (SummerizerConfig): The configuration for the summarizer, including the prompt, client, and model.
        """
        self.prompt = config.prompt
        self.client = config.client
        self.model = config.model
    
    def run(self, text: str) -> str:
        """
        Summarizes the input text using the configured LLM client and prompt.

        Args:
            text (str): The input text to summarize. If the text is a file path, the file is read and its content is used as the input text.

        Returns:
            str: The summarized content generated by the LLM client.
        """
        if os.path.exists(text):
            with open(text, mode="r", encoding="UTF-8") as f:
                text = f.read()
        
        response = self.client.chat.completions.create(
            messages= [
                {
                    "role": "system", "content": self.prompt
                },
                {
                    "role": "user", "content": text
                }
            ],
            model=self.model,
            temperature=0
        )
        
        return response.choices[0].message.content
    